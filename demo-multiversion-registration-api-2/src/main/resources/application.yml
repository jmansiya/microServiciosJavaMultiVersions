server:
  port: ${appPort:8700}

# http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints
endpoints:
  enabled: false
  info:
    enabled: true
  health:
    enabled: true
  metrics:
    enabled: true

management:
  security:
    enabled: false

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:1111/eureka/
  instance:
    prefer-ip-address: true
    metadata-map:
      instanceId: ${spring.application.name}:${server.port}     
 
demo-multiversion-registration-api1-v1:
   ribbon:
     # Eureka vipAddress of the target service
     DeploymentContextBasedVipAddresses: demo-multiversion-registration-api-1
     NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
     # Interval to refresh the server list from the source (ms)
     ServerListRefreshInterval: 30000
 
demo-multiversion-registration-api1-v2:
   ribbon:
     # Eureka vipAddress of the target service
     DeploymentContextBasedVipAddresses: demo-multiversion-registration-api-1
     NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
     # Interval to refresh the server list from the source (ms)
     ServerListRefreshInterval: 30000

#Ejemplo de implementaci√≥n de IPing.
services-v1:
   ribbon:
     ServerListRefreshInterval: 100
     DeploymentContextBasedVipAddresses: demo-multiversion-registration-api-1
     NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#     NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule

demo-multiversion-registration-api-1:
   ribbon:
     ServerListRefreshInterval: 1500
#     DeploymentContextBasedVipAddresses: demo-multiversion-registration-api-1
#     NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
